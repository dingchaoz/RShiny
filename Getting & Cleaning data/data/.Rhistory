installed.packages()
installed.packages("Rtools")
install.packages("Rtools")
install.packages("Rtools",lib=3.2)
install.packages("Rtools",3.2)
install.packages
install.packages("Rtools",lib = 3.2)
install.packages("Rtools")
libpath()
.libpaths()
install.packages("Rtools", lib = 'C:/Users/ku906/R/win-library/3.2')
devtools::install_github("rstudio\shinyapps")
devtools::install_github("rstudio/shinyapps")
devtools::install_github("rstudio/shinyapps")
devtools::install_github("rstudio/shinyapps")
devtools::install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='sriseshadri', token='2A8EAB89D262A99F2872BC824F2B0D12', secret='XDvOzOOiMrBlnIAy51FZlr311YzM40FN8UqgUqdD')
shiny::runApp('Documents/Coursera_R/Example App')
packageVersion('shinyapps')
shiny::runApp('Documents/Coursera_R/Example App')
updateR()
install.packages("installr")
updateR()
library(installr)
updateR()
shiny::runApp('Documents/Coursera_R/Example App')
shiny::runApp('Documents/Coursera_R/Example App')
shiny::runApp('Documents/Coursera_R/Example App')
shiny::runApp('Documents/Coursera_R/Example App')
install.packages("RODBC")
library(RODBC)
obdcConnect("W4-S129433\CAPABILITYDB")
obdcConnect(W4-S129433\CAPABILITYDB)
?obdcConnect
??obdcConnect
shiny::runApp('Documents/Coursera_R/Example App')
shiny::runApp('Documents/Coursera_R/Example App')
version()
version
shiny::runApp('Documents/Coursera_R/Example App')
shiny::runApp('Documents/Coursera_R/Example App')
Data = read.table('C:\Users\ku906\Documents\Ad-Hoc Projects\Baseline_Vs_NewDPFSensor.xlsx',Header = T)
Data = read.table('C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx',Header = T)
Data = read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header = T)
Data = read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header = T)
Data = read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header = TRUE)
Data = read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header=T,SheetName = "Sheet1")
Data <- read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header=T,SheetName = "Sheet1")
Data <- read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header=T,SheetName = "Sheet1",SEP="")
Data <- read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx",Header=T,SheetName = "Sheet1",SEP="")
Data <- read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx")
Data <- read.table("C:/Users/ku906/Documents/Ad-Hoc Projects/Baseline_Vs_NewDPFSensor.xlsx")
library(XML) # requires XML package
url <- "http://www.zillow.com/homes/Greenwood-IN-46143_rb/"
document <- htmlTreeParse(url,useInternalNodes = TRUE)
Root <- xmlRoot(document)
xmlName(Root)
names(Root)
StAddress <- xpathSApply(document,"//span[@itemprop='streetAddress']",xmlValue)
ListPrice <- xpathSApply(document,"//dt[@class='price-large zsg-h2 zsg-content_collapsed']",xmlValue)
BedBathSqFt <- xpathSApply(document,"//span[@class='beds-baths-sqft']",xmlValue)
StAddress
StAddress <- xpathSApply(document,"//span[@itemprop='streetAddress']",xmlValue)
ListPrice <- xpathSApply(document,"//dt[@class='price-large zsg-h2 zsg-content_collapsed']",xmlValue)
BedBathSqFt <- xpathSApply(document,"//span[@class='beds-baths-sqft']",xmlValue)
StAddress
BedBathSqFt
install.packages("data.table")
DF = data.frame(a=rnorm(9,0,1), y=rep(c("a","b","c"),each=3),z = rnorm(9,2,1))
DF
DT = data.table(a=rnorm(9,0,1), y=rep(c("a","b","c"),each=3),z = rnorm(9,2,1))
library(data.table)
DT = data.table(a=rnorm(9,0,1), y=rep(c("a","b","c"),each=3),z = rnorm(9,2,1))
DT
install.packages("Rcurl")
install.packages("RCurl")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
x <- getURL(URL)
library(RCurl)
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getURL(URL)
file.edit('~/.Rprofile')
options(rpubs.upload.method = "internal")
library(RCurl)
getURL(URL)
getURL(URL, ssl.verifypeer = FALSE)
x <- getURL(URL,ssl.verifypeer = F)
install.packages('RSQLServer')
install.packages('RODBC')
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=W4-S129433\CAPABILITYDB;database=HDPacific;trusted_connection=true')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=W4-S129433/CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=\\W4-S129433\CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=//W4-S129433/CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433/CAPABILITYDB;database=HDPacific;trusted_connection=true')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
dbhandle <- odbcDriverConnect('driver=SQL Server;server= W4-S129433/CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\\CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\\\\CAPABILITYDB;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\\\\CAPABILITYDB,1443;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\\CAPABILITYDB,1443;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\CAPABILITYDB,1443;database=HDPacific;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server= W4-S129433\\CAPABILITYDB,1443;database=HDPacific;trusted_connection=true')
library(RSQLServer)
install.packages('RSQLServer')
library(RSQLServer)
dbhandle <- dbconnect('SQLServer',Server = W4-S129433//CAPABILITYDB;Database = HDPacific;trusted_connection = T )
dbhandle <- dbconnect('SQLServer',Server = W4-S129433/CAPABILITYDB;Database = HDPacific;trusted_connection = T )
dbhandle <- dbconnect('SQLServer',Server = W4-S129433/CAPABILITYDB,Database = HDPacific;trusted_connection = T )
dbhandle <- dbconnect('SQLServer',Server = W4-S129433/CAPABILITYDB,Database = HDPacific,trusted_connection = T )
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
library(RSQLServer)
conn <- dbConnect(SQLServer(),'W4-s129433//capabilitydb')
m<-dbdriver('RODBC')
m<-dbDriver('RODBC')
library(RODBC)
m<-dbDriver('RODBC')
m<-dbDriver("RODBC")
ch <- dbConnect("Capability.dsn")
ch <- dbConnect(Capability.dsn)
ch <- dbConnect(Capability.dsn)
ch <- dbConnect('C:\Windows\ODBC.INI')
ch <- dbConnect('C:/Windows/ODBC.INI'
)
ch <- dbConnect(C:/Windows/ODBC.INI)
conn <- dbConnect("Capability",'trusted_connection = True')
conn <- dbConnect("Capability")
conn <- odbcConnect("Capability")
)
conn <- odbcConnect("Capability",uid = 'ku906',pwd = 'Motiva10')
conn
conn <- odbcConnect("Capability",Trusted_Connection = TRUE)
conn <- odbcConnect("Capability",'Trusted_Connection = TRUE')
conn
trucks <- sqlQuery(conn,"Select * FROM DragonCC.dbo.tblTrucks")
trucks
head(trucks)
library(RODBC)
conn <-dbconnect("Capability") # Capability is the ODBC name.
library(RSQLServer)
conn <-dbconnect("Capability")
conn <-odbcconnect("Capability")
conn <-odbcConnect("Capability")
remove()
remove(ls)
remove(ls())
ls()
rm
rm(list=ls())
library(RODBC)
conn <-odbcConnect("Capability")
conn
trucks <- sqlQuery(conn,'select * from Acadia.dbo.tblTrucks')
cals <- sqlquery(conn,'select * from Acadia.dbo.tblCals')
cals <- sqlQuery(conn,'select * from Acadia.dbo.tblCals')
getwd()
setwd('c:/users/ku906/documents/coursera_R/Getting & Cleaning data/data')
url <- 'https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD'
download.file(url,'./restdata.csv')
restdata <- read.csv('restdata.csv',header = T)
head(restdata)
tail(restdata,n=3)
summary(restdata)
str(restdata)
