install.packages("shiny")
require(devtools)
load("~/RShinyServer/originalScripts/Dashboard/.Rhistory")
require(devtools)
install_version("ggplot2",version="1.0.1")
install_version("ggplot2",version="1.0.1",repos="http://cran.us.r-project.org")
library(ggplot2)
sessionInfo()
setwd("~/RShinyServer/originalScripts/Dashboard")
shiny::runApp()
runApp(port = 8080,host=getOption("shiny.host","143.222.211.24")
runApp(port = 8080,host=getOption("shiny.host","143.222.211.24"))
runApp(port = 8080,host=getOption("shiny.host","143.222.211.24"))
getwd()
library(RODBC)
shiny::runApp()
install.packages("xlxs")
install.packages("xlsx")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
options(show.error = recover)
options(fulltrace = TRUE)
shiny::runApp()
options(shiny.fullstacktrace = TRUE)
options(shiny.error=recover)
shiny::runApp()
54
e
h
options(shiny.error = browser)
options(shiny.trace=TRUE)
shiny::runApp()
e
IUPRTrks$TruckName
IUPRTrks
shiny::runApp()
e
shiny::runApp()
IUPRSummary
TruckName
options(shiny.error = recover)
shiny::runApp()
shiny::runApp()
sqlQuery(conn,paste("Select TruckName FROM ",PrgMap$Database[[which(PrgMap$Programs==input$Program)]],".dbo.tblTrucks where TruckID in (",paste(as.character(TruckID),collapse = ","),")"))
"Select TruckName FROM ",PrgMap$Database[[which(PrgMap$Programs==input$Program)]],".dbo.tblTrucks where TruckID in (",paste(as.character(TruckID),collapse = ","),")")
WhereClause
PrgMap$Database
PrgMap$Database[[which(PrgMap$Programs==input$Program)]]
TruckID
shiny::runApp()
shiny::runApp()
options(shiny.error = browser)
shiny::runApp()
e
shiny::runApp()
e
shiny::runApp()
e
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
e
e
options(shiny.error = null)
options(shiny.error = false)
shiny::runApp()
e
shiny::runApp()
shiny::runApp()
shiny::runApp()
e
shiny::runApp()
e
Trucks
nchar(Trucks)
where <- "Where"
shiny::runApp()
TTrucks
Trucks
is.null(Trucks)
is.empty(Trucks)
isempty(Trucks)
.libPaths()
version
getwd()
rawdata <- rawdata[sapply(rawdata, nchar) > 0]
data <- read.table("data.txt",sep="\t")
dataNeW <-data[!data$V1=="deg"),]
rawdata <- rawdata[sapply(rawdata, nchar) > 0]
data <- read.table("data.txt",sep="\t")
dataNeW <-data[!data$V1=="deg"),]
dataNeW <-data[!data$V1=="deg",]
class(dataNeW)
dataNew$tbl = 1
dataNeW
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
library(shinyApp)
install.packages("shinyApp")
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
library(shiny)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
})
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
source('~/Dingchao/Courses/R/RShinyDash/Dashboard/indicatorBar.R')
shinyApp(ui = ui, server = server)
